components:
  schemas:
    NDSFile:
      type: object
      required:
        - ndsId
        - file_path
        - file_time
        - data_type
        - sub_file_name
        - enodebid
      properties:
        file_hash:
          type: string
          description: 文件哈希值（由系统自动生成）
        ndsId:
          type: integer
          description: NDS ID
        file_path:
          type: string
          description: 文件路径
        file_time:
          type: string
          format: date-time
          description: 文件时间
        data_type:
          type: string
          description: 数据类型
        sub_file_name:
          type: string
          description: 子文件名
        header_offset:
          type: integer
          description: 头部偏移量
          default: 0
        compress_size:
          type: integer
          description: 压缩大小
          default: 0
        file_size:
          type: integer
          description: 文件大小
          default: 0
        flag_bits:
          type: integer
          description: 标志位
          default: 0
        enodebid:
          type: string
          description: 基站ID
        parsed:
          type: integer
          description: 解析状态
          default: 0
        createdAt:
          type: string
          format: date-time
          description: 创建时间
        updatedAt:
          type: string
          format: date-time
          description: 更新时间

    BatchAddResponse:
      type: object
      properties:
        total:
          type: integer
          description: 总记录数
        success:
          type: integer
          description: 成功添加数
        skipped:
          type: integer
          description: 跳过数（已存在）

paths:
  /api/ndsfile/batch:
    post:
      summary: 批量添加NDS文件
      tags: [NDS文件管理]
      description: |
        批量添加NDS文件记录。
        - file_hash 由系统根据 ndsId、file_path 和 sub_file_name 自动生成
        - 如果文件已存在（file_hash相同）则跳过
        - 支持高并发写入，使用事务确保数据一致性
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                files:
                  type: array
                  items:
                    $ref: '#/components/schemas/NDSFile'
      responses:
        '200':
          description: 批量添加成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: 批量添加NDS文件完成
                  data:
                    $ref: '#/components/schemas/BatchAddResponse'
        '400':
          description: 请求参数错误
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: 请提供有效的文件列表
                  data:
                    type: null
        '500':
          description: 服务器内部错误
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 500
                  message:
                    type: string
                    example: 批量添加NDS文件失败
                  data:
                    type: null

  /api/ndsfile/{ndsId}/paths:
    get:
      summary: 获取NDS文件路径列表
      tags: [NDS文件管理]
      description: 获取指定NDS的所有文件路径（去重）
      parameters:
        - name: ndsId
          in: path
          required: true
          schema:
            type: integer
          description: NDS ID
      responses:
        '200':
          description: 获取成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: 获取文件路径列表成功
                  data:
                    type: array
                    items:
                      type: string
                    description: 文件路径列表
        '400':
          description: 无效的NDS ID
        '500':
          description: 服务器内部错误

  /api/ndsfile/remove:
    post:
      summary: 批量设置文件为已移除状态
      tags: [NDS文件管理]
      description: 批量将指定文件路径的记录标记为已移除状态（parsed = -1）
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                file_paths:
                  type: array
                  items:
                    type: string
                  description: 文件路径列表
      responses:
        '200':
          description: 设置成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: 批量设置文件状态完成
                  data:
                    type: object
                    properties:
                      updated:
                        type: integer
                        description: 更新的记录数
        '400':
          description: 无效的文件路径列表
        '500':
          description: 服务器内部错误

  /api/ndsfile/parsed:
    post:
      summary: 设置文件解析状态
      tags: [NDS文件管理]
      description: |
        设置指定file_hash对应文件的解析状态。
        - 如果记录不存在，接口仍然返回成功，但updated值为0
        - 如果记录存在，updated值为更新的记录数
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - file_hash
                - parsed
              properties:
                file_hash:
                  type: string
                  description: 文件哈希值
                parsed:
                  type: integer
                  description: 解析状态值
      responses:
        '200':
          description: 设置成功（无论记录是否存在）
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: 设置解析状态完成
                  data:
                    type: object
                    properties:
                      updated:
                        type: integer
                        description: 更新的记录数（0表示记录不存在）
        '400':
          description: 无效的请求参数
        '500':
          description: 服务器内部错误

  /api/ndsfile/missing:
    post:
      summary: 查找不存在的文件路径
      tags: [NDS文件管理]
      description: |
        批量检查文件路径，返回不存在的文件路径列表。
        - 使用单次数据库查询优化性能
        - 适合大批量文件路径检查
        - 支持高并发访问
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                file_paths:
                  type: array
                  items:
                    type: string
                  description: 要检查的文件路径列表
      responses:
        '200':
          description: 检查成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: 文件路径检查完成
                  data:
                    type: object
                    properties:
                      missing:
                        type: array
                        items:
                          type: string
                        description: 不存在的文件路径列表
                      existing:
                        type: array
                        items:
                          type: string
                        description: 存在的文件路径列表
        '400':
          description: 无效的文件路径列表
        '500':
          description: 服务器内部错误

  /api/ndsfile/filter-files:
    post:
      summary: 过滤文件
      description: |
        根据未完成任务的时间范围过滤文件路径列表，返回在时间范围内且不存在于数据库的文件路径。
        - 提取文件名中的14位时间戳
        - 检查时间是否在任意未完成任务的时间范围内
        - 过滤掉已存在于数据库的文件
      tags:
        - NDS文件管理
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                file_paths:
                  type: array
                  items:
                    type: string
                  description: 需要过滤的文件路径列表
              required:
                - file_paths
      responses:
        '200':
          description: 过滤成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 200
                  data:
                    type: object
                    properties:
                      missing:
                        type: array
                        items:
                          type: string
                        description: 在任务时间范围内且不存在于数据库的文件路径
                  message:
                    type: string
                    example: 文件路径检查完成
        '400':
          description: 请求参数错误
        '500':
          description: 服务器内部错误

  /api/ndsfile/memory-info:
    get:
      tags:
        - NDS文件管理
      summary: 获取Redis内存使用状态
      description: 获取Redis当前内存使用情况，包括已用内存、峰值内存、最大可用内存和使用率
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    description: 状态码，0表示成功，-1表示失败
                  data:
                    type: object
                    properties:
                      used:
                        type: number
                        description: 当前使用的内存（字节）
                      peak:
                        type: number
                        description: 内存使用峰值（字节）
                      maxMemory:
                        type: number
                        description: 最大可用内存（字节）
                      ratio:
                        type: number
                        description: 内存使用率（百分比）
                    example:
                      used: 1073741824
                      peak: 2147483648
                      maxMemory: 8589934592
                      ratio: 12.5
                  msg:
                    type: string
                    description: 返回消息
